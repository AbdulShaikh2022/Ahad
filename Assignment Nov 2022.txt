Q1. Why do we call Python as a general purpose and high-level programming language?
Ans- A high-level language is any programming language that enables development of a program in 
a much more user-friendly programming context and is generally independent of the computer's hardware architecture
Q2. Why is Python called a dynamically typed language?
Answer-The Python interpreter does type checking only as code runs, and the type of a variable is allowed to change over its lifetime.
Q3. List some pros and cons of Python programming language?
Answer - Pros of  Python is Simple,free , easy to use ,Highly Compatible,Object-Oriented, Cons of Paython are Poor Memory Efficiency. To make it simple for the developer, Python needs a lot of memory space; 
this can be a tad problematic if you want to develop apps where you need to optimize memory.
Q4. In what all domains can we use Python?
Answer-We can use paython in artificial intelligence, machine learning and deep learning
Q5. What are variable and how can we declare them?
Answer-A Python variable is a symbolic name that is a reference or pointer to an object. we don't declare variables, we simply assign them.
Q6. How can we take an input from the user in Python?
Answer- We can use the input() method & raw_input() method.
Q7. What is the default datatype of the value that has been taken as an input using input() function?
Answer-By default input() function takes the user's input in a string.
Q8. What is type casting?
Answer -Type Casting is the method to convert the variable data type into a certain data type in order to the operation required to be performed by users. 
Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?
Answer -In Python, users can take multiple values or inputs in one line by two methods: Using the split() method. 
Q10. What are keywords?
Answer- Python keywords are special reserved words that have specific meanings and purposes and can't be used for anything but those specific purposes.
Q11. Can we use keywords as a variable? Support your answer with reason.
Answer- We cannot use a keyword as a variable name, function name, or any other identifier. They are used to define the syntax and structure of the Python language. All the keywords except True , False and None are in lowercase and they must be written as they are
Q12. What is indentation? What's the use of indentaion in Python?
Answer- Indentation refers to the spaces at the beginning of a code line. Where in other programming languages the indentation in code is for readability only, the indentation in Python is very important. Python uses indentation to indicate a block of code
Q13. How can we throw some output in Python?
Answer- The basic way to do output is the print statement. To end the printed line with a newline, add a print statement without any objects. 
Q14. What are operators in Python?
Answer- There are seven different types of operators: arithmetic operators, assignment operators, comparison operators, logical operators, identity operators, membership operators, and boolean operators.
Q15. What is difference between / and // operators?
Answer- / is regular division(returns float) and // is floor division(returns int).
Q16. Write a code that gives following as an output.

iNeuroniNeuroniNeuroniNeuron
Q17. Write a code to take a number as an input from the user and check if the number is odd or even.
Answer-
num = int (input (“Enter any number to test whether it is odd or even: “)

if (num % 2) == 0:

              print (“The number is even”)

else:

              print (“The provided number is odd”)

Q18. What are boolean operator?
Answer-The logical operators and, or and not are also referred to as boolean operators. While and as well as or operator needs two operands, which may evaluate to true or false, not operator needs one operand evaluating to true or false. Boolean and operator returns true if both operands return true
Q19. What will the output of the following?

1 or 0

0 and 0

True and False and True

1 or 0 or 0
Q20. What are conditional statements in Python?
Answer-A conditional statement as the name suggests itself, is used to handle conditions in your program. These statements guide the program while making decisions based on the conditions encountered by the program
Q21. What is use of 'if', 'elif' and 'else' keywords?
Answer-If-elif-else statement is used in Python for decision-making i.e the program will evaluate test expression and will execute the remaining statements only if the given test expression turns out to be true. This allows validation for multiple expressions
Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".

Q23. Write a code that displays the sum of all the even numbers from the given list.

numbers = [12, 75, 150, 180, 145, 525, 50]
Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.

Q25. Write a program to display only those numbers from a list that satisfy the following conditions

The number must be divisible by five

If the number is greater than 150, then skip it and move to the next number

If the number is greater than 500, then stop the loop

numbers = [12, 75, 150, 180, 145, 525, 50]
Q26. What is a string? How can we declare string in Python?
Answer-strings in Python are arrays of bytes representing unicode characters. However, Python does not have a character data type, a single character is simply a string with a length of 1. Square brackets can be used to access elements of the string.
Q27. How can we access the string using its index?
Answer-Individual characters in a string can be accessed by specifying the string name followed by a number in square brackets ( [] ). String indexing in Python is zero-based: the first character in the string has index 0 , the next has index 1 , and so on.
Q28. Write a code to get the desired output of the following

string = "Big Data iNeuron"
desired_output = "iNeuron"
Q29. Write a code to get the desired output of the following

string = "Big Data iNeuron"
desired_output = "norueNi"
Q30. Resverse the string given in the above question.

Q31. How can you delete entire string at once?
Answer-We can use the replace() and translate() methods to specify which characters you want to remove from the string and return a new modified string result. 
Q32. What is escape sequence?
Answer-An escape sequence is a sequence of characters that, when used inside a character or string, does not represent itself but is converted into another character or series of characters.
Q33. How can you print the below string?
'iNeuron's Big Data Course'
Q34. What is a list in Python?
Answer-Lists are used to store multiple items in a single variable.Lists are one of 4 built-in data types in Python used to store collections of data, the other 3 are Tuple, Set, and Dictionary, all with different qualities and usage.
Lists are created using square brackets:
Q35. How can you create a list in Python?
Answer- a list is created by placing elements inside square brackets [] , separated by commas. A list can have any number of items and they may be of different types (integer, float, string, etc.)
Q36. How can we access the elements in a list?
Answer-List literals are written within square brackets [ ]. Lists work similarly to strings -- use the len() function and square brackets [ ] to access data, with the first element at index 0.
Q37. Write a code to access the word "iNeuron" from the given list.

lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
Q38. Take a list as an input from the user and find the length of the list.

Q39. Add the word "Big" in the 3rd index of the given list.

lst = ["Welcome", "to", "Data", "course"]
Q40. What is a tuple? How is it different from list?

Q41. How can you create a tuple in Python?
Answer- A tuple is created by placing all the items (elements) inside parentheses () , separated by commas. 
Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.
Answer- o create a named tuple, import the namedtuple class from the collections module. The constructor takes the name of the named tuple (which is what type() will report), and a string containing the fields names, separated by whitespace. It returns a new namedtuple class for the specified fields.
Q43. Can two tuple be appended. If yes, write a code for it. If not, why?
Answer-the + operator can concatenate, it can be used to combine tuples to form a new tuple, though it cannot modify an existing tuple. The * operator can be used to multiply tuples.
Q44. Take a tuple as an input and print the count of elements in it.
Answer- # tuple of vowels
vowels = ('a', 'e', 'i', 'o', 'i', 'u')

# counts the number of i's in the tuple
count = vowels.count('i')

print(count) 

# Output: 2
Q45. What are sets in Python?
Answer- The set() function creates a set object. The items in a set list are unordered, so it will appear in random order.
Q46. How can you create a set?
Ansewer-A set is created by placing all the items (elements) inside curly braces {} , separated by comma, or by using the built-in set() function.
Q47. Create a set and add "iNeuron" in your set.

Q48. Try to add multiple values using add() function.
Answer- 
class my_dict(dict): 

    # __init__ function 
    def __init__(self): 
        self = dict() 

    # Function to add key:value 
    def add(self, key, value): 
        self[key] = value

    # Function to remove key:value 
    def removekey(self,key):
        del self[key]


dict_obj = my_dict() 
dict_obj.add('key1', 'value1') 
dict_obj.add('key2', 'value2') 
dict_obj.add('key1', 'value3')
print(dict_obj) 
Q49. How is update() different from add()?
Answer-We use add() method to add single value to a set. We use update() method to add sequence values to a set. Here Sequences are any iterables including list , tuple , string , dict etc.
Q50. What is clear() in sets?
Answer- The clear() method removes all elements in a set
Q51. What is frozen set?
Answer-Python frozenset() Method creates an immutable Set object from an iterable. It is a built-in Python function. As it is a set object therefore we cannot have duplicate values in the frozenset.
Q52. How is frozen set different from set?
Answer-Frozenset is similar to set in Python, except that frozensets are immutable, which implies that once generated, elements from the frozenset cannot be added or removed. This function accepts any iterable object as input and transforms it into an immutable object.
Q53. What is union() in sets? Explain via code.
Answer-The union of two sets A and B is the set of elements which are in A, in B, or in both A and B. In set-builder notation, . For example, if A = {1, 3, 5, 7} and B = {1, 2, 4, 6, 7} then A ∪ B = {1, 2, 3, 4, 5, 6, 7}.
Q54. What is intersection() in sets? Explain via code.
Answer-The intersection() method returns a set that contains the similarity between two or more sets. 
Code
A = {2, 3, 5}
B = {1, 3, 5}
# compute intersection between A and B
print(A.intersection(B))
# Output: {3, 5}
Q55. What is dictionary ibn Python?
Answer-Dictionaries are Python's implementation of a data structure that is more generally known as an associative array. A dictionary consists of a collection of key-value pairs. Each key-value pair maps the key to its associated value.
Q56. How is dictionary different from all other data structures.
Answer-The dictionary Data Structure in Python is an unordered collection of items. While other Data Structures use only one value as the element, the dictionary is a slightly more compound data structure.
Q57. How can we delare a dictionary in Python?
Answer-A Dictionary in python is declared by enclosing a comma-separated list of key-value pairs using curly braces({}).
Q58. What will the output of the following?

var = {}
print(type(var))
Q59. How can we add an element in a dictionary?
Answer-There is no add() , append() , or insert() method you can use to add an item to a dictionary in Python. Instead, you add an item to a dictionary by inserting a new index key into the dictionary, then assigning it a particular value.
Q60. Create a dictionary and access all the values in that dictionary.
Answer-
Dict = {1: 'Abdul', 2: 'For', 3: 'Shaikh'}
print(Dict)
Output- {1: 'Abdul', 2: 'For', 3: 'Shaikh'}
Q61. Create a nested dictionary and access all the el{1: 'Geeks', 2: 'For', 3: 'Geeks'}ement in the inner dictionary.
Answer-Dict = {1: 'Geeks', 2: 'For', 3: {'A' : 'Welcome', 'B' : 'To', 'C' : 'Geeks'}}
Q62. What is the use of get() function?
Answer-Python find() function is used to return the lowest index value of the first occurrence of the substring from the input string; else it returns -1. 
Q63. What is the use of items() function?
Answer- In Python Dictionary, items() method is used to return the list with all dictionary keys with values. Parameters: This method takes no parameters. 
Q64. What is the use of pop() function?
Answer- The pop() method removes the element at the specified position.
Q65. What is the use of popitems() function?
Answer- The popitem() method removes the item that was last inserted into the dictionary. The removed item is the return value of the popitem() method
Q66. What is the use of keys() function?
Answer- It returns a view object that displays a list of all the keys in the dictionary in order of insertion using Python. Parameters: There are no parameters. Returns: A view object is returned that displays all the keys.
Q67. What is the use of values() function?
Answer-It returns a view object. The view object contains the values of the dictionary, as a list. If you use the type() method on the return value, you get “dict_values object”. It must be cast to obtain the actual list.
Q68. What are loops in Python?
Answer-Loops means repeating something over and over until a particular condition is satisfied. A for loop in Python is a control flow statement that is used to repeatedly execute a group of statements as long as the condition is satisfied. Such a type of statement is also known as an iterative statement
Q69. How many type of loop are there in Python?
Answer- There are 2 Loops in Python 1.while loop.2 for loop.
Q70. What is the difference between for and while loops?
Answer-In the case of a for loop, the initialization is done once at the start, so there is no need to initialize it again. But in the case of a while loop, we require to initialize the loop manually by taking a variable that is further modified 
Q71. What is the use of continue statement?
Answer-The continue keyword is used to end the current iteration in a for loop (or a while loop), and continues to the next iteration.
Q72. What is the use of break statement?
Answer-'Break' in Python is a loop control statement. It is used to control the sequence of the loop. Suppose you want to terminate a loop and skip to the next code after the loop; break will help you do that. A typical scenario of using the Break in Python is when an external condition triggers the loop's termination.
Q73. What is the use of pass statement?
Answer-The pass statement is used as a placeholder for future code. When the pass statement is executed, nothing happens, but you avoid getting an error when empty code is not allowed. Empty code is not allowed in loops, function definitions, class definitions, or in if statements.
Q74. What is the use of range() function?
Answer-The range() function returns a sequence of numbers, starting from 0 by default, and increments by 1 (by default), and stops before a specified number.
Q75. How can you loop over a dictionary?
Answer-You can loop through a dictionary by using a for loop.When looping through a dictionary, the return value are the keys of the dictionary, but there are methods to return the values as well.
Coding problems
Q76. Write a Python program to find the factorial of a given number.
Answer-
num = 7 
factorial = 1
if num < 0:
   print("Sorry, factorial does not exist for negative numbers")
elif num == 0:
   print("The factorial of 0 is 1")
else:
   for i in range(1,num + 1):
       factorial = factorial*i
   print("The factorial of",num,"is",factorial)
Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (PRT)/100
Answer-
def simple_interest(p,t,r):
    print('The principal is', p)
    print('The time period is', t)
    print('The rate of interest is',r)
     
    si = (p * t * r)/100
     
    print('The Simple Interest is', si)
    return si
Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.
Answer-
def compound_interest(principle, rate, time):
 
    # Calculates compound interest
    Amount = principle * (pow((1 + rate / 100), time))
    CI = Amount - principle
    print("Compound interest is", CI)
Q79. Write a Python program to check if a number is prime or not.

Q80. Write a Python program to check Armstrong Number.
Answer-
def power(x, y):
     
    if y == 0:
        return 1
    if y % 2 == 0:
        return power(x, y // 2) * power(x, y // 2)
         
    return x * power(x, y // 2) * power(x, y // 2)
Q81. Write a Python program to find the n-th Fibonacci Number.
Answer- 
def solve(n):
   if n <= 2:
      return n - 1
   else:
      return solve(n - 1) + solve(n - 2)

n = ()
print(solve(n))
Q82. Write a Python program to interchange the first and last element in a list.
Answer-  Swap function
def swapList(newList):
    size = len(newList)
     
    # Swapping
    temp = newList[0]
    newList[0] = newList[size - 1]
    newList[size - 1] = temp
     
    return newList
     
# Driver code
newList = [12, 35, 9, 56, 24]
 
print(swapList(newList))
Q83. Write a Python program to swap two elements in a list.
Answer-
def swapPositions(list, pos1, pos2):
     
    list[pos1], list[pos2] = list[pos2], list[pos1]
    return list
 
# Driver function
List = [23, 65, 19, 90]
pos1, pos2  = 1, 3
 
print(swapPositions(List, pos1-1, pos2-1))
Q84. Write a Python program to find N largest element from a list.
Answer-
def Nmaxelements(list1, N):
    final_list = []
 
    for i in range(0, N):
        max1 = 0
         
        for j in range(len(list1)):    
            if list1[j] > max1:
                max1 = list1[j];
                 
        list1.remove(max1);
        final_list.append(max1)
         
    print(final_list)
Q85. Write a Python program to find cumulative sum of a list.
Answer- def Cumulative(lists):
    cu_list = []
    length = len(lists)
    cu_list = [sum(lists[0:x:1]) for x in range(0, length+1)]
    return cu_list[1:]
 
# Driver Code
lists = [10, 20, 30, 40, 50]
print (Cumulative(lists))
Q86. Write a Python program to check if a string is palindrome or not.
Answer -
def isPalindrome(s):
    return s == s[::-1]
 
# Driver code
s = "malayalam"
ans = isPalindrome(s)
 
if ans:
    print("Yes")
else:
    print("No")
Q87. Write a Python program to remove i'th element from a string.

Q88. Write a Python program to check if a substring is present in a given string.
Answer-
MyString1 = "A geek in need is a geek indeed"
 
if "need" in MyString1:
    print("Yes! it is present in the string")
else:
    print("No! it is not present")
Q89. Write a Python program to find words which are greater than given length k.

Q90. Write a Python program to extract unquire dictionary values.
Answer-
test_dict = {'gfg': [5, 6, 7, 8],
             'is': [10, 11, 7, 5],
             'best': [6, 12, 10, 8],
             'for': [1, 2, 5]}
 
# printing original dictionary
print("The original dictionary is : " + str(test_dict))
 
# Extract Unique values dictionary values
# Using set comprehension + values() + sorted()
res = list(sorted({ele for val in test_dict.values() for ele in val}))
 
# printing result
print("The unique values list is : " + str(res))
Q91. Write a Python program to merge two dictionary.
Answer-
def Merge(dict1, dict2):
    return(dict2.update(dict1))
dict1 = {'a': 10, 'b': 8}
dict2 = {'d': 6, 'c': 4}
 print(Merge(dict1, dict2))
 print(dict2) 
Q92. Write a Python program to convert a list of tuples into dictionary.

Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.

Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]
Q94. Write a Python program to get all combinations of 2 tuples.

Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]
Q95. Write a Python program to sort a list of tuples by second item.

Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]
Q96. Write a python program to print below pattern.

* 
* * 
* * * 
* * * * 
* * * * * 
Q97. Write a python program to print below pattern.

    *
   **
  ***
 ****
*****
Q98. Write a python program to print below pattern.

    * 
   * * 
  * * * 
 * * * * 
* * * * * 
Q99. Write a python program to print below pattern.

1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
Q100. Write a python program to print below pattern.

A 
B B 
C C C 
D D D D 
E E E E E 